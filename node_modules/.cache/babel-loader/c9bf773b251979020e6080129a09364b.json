{"ast":null,"code":"var _jsxFileName = \"/home/yasmeen/practice/DoctorGt/src/components/Fuel.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport './status.css';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Fuel(props) {\n  const monthlyFuel = j => {\n    console.log('the jjjj', j);\n    let sum = 0;\n    j = j.parseInt();\n\n    for (let i = 0; i < props.data.length; i++) {\n      console.log('pppppp', props.data[i].monthlyFuel[j]);\n      sum += props.data[i].monthlyFuel[j];\n      console.log('The sum is', sum);\n    }\n\n    return sum / 6;\n  };\n\n  let one = monthlyFuel(1);\n  const options = {\n    animationEnabled: true,\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\" // suffix: \" kWh\"\n\n    },\n    data: [{\n      type: \"splineArea\",\n      xValueFormatString: \"YYYY\",\n      yValueFormatString: \"#,##0.## bn kW⋅h\",\n      showInLegend: true,\n      legendText: \"kWh = one kilowatt hour\",\n      dataPoints: [{\n        x: new Date(2021, 1),\n        y: `${one}`\n      }, {\n        x: new Date(2021, 2),\n        y: monthlyFuel(2)\n      }, {\n        x: new Date(2021, 3),\n        y: 72.569\n      }, {\n        x: new Date(2021, 4),\n        y: 72.743\n      }, {\n        x: new Date(2021, 5),\n        y: 72.381\n      }, {\n        x: new Date(2021, 6),\n        y: 71.406\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Fuel;\nexport default Fuel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fuel\");","map":{"version":3,"sources":["/home/yasmeen/practice/DoctorGt/src/components/Fuel.jsx"],"names":["React","useEffect","useState","ReactDom","CanvasJSChart","Fuel","props","monthlyFuel","j","console","log","sum","parseInt","i","data","length","one","options","animationEnabled","title","text","axisY","type","xValueFormatString","yValueFormatString","showInLegend","legendText","dataPoints","x","Date","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,SAAQC,aAAR,QAA4B,uBAA5B;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAElB,QAAMC,WAAW,GAAIC,CAAD,IAAK;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAxB;AACA,QAAIG,GAAG,GAAG,CAAV;AACAH,IAAAA,CAAC,GAAGA,CAAC,CAACI,QAAF,EAAJ;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAA5B,EAAoCF,CAAC,EAArC,EAAwC;AACtCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAK,CAACQ,IAAN,CAAWD,CAAX,EAAcN,WAAd,CAA0BC,CAA1B,CAAtB;AACAG,MAAAA,GAAG,IAAIL,KAAK,CAACQ,IAAN,CAAWD,CAAX,EAAcN,WAAd,CAA0BC,CAA1B,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,GAA1B;AACD;;AACD,WAAOA,GAAG,GAAC,CAAX;AACD,GAVD;;AAWC,MAAIK,GAAG,GAAGT,WAAW,CAAC,CAAD,CAArB;AACD,QAAMU,OAAO,GAAG;AACdC,IAAAA,gBAAgB,EAAE,IADJ;AAEdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAFO;AAKdC,IAAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE,WADF,CAEL;;AAFK,KALO;AASdL,IAAAA,IAAI,EAAE,CAAC;AACLQ,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,kBAAkB,EAAE,MAFf;AAGLC,MAAAA,kBAAkB,EAAE,kBAHf;AAILC,MAAAA,YAAY,EAAE,IAJT;AAKLC,MAAAA,UAAU,EAAE,yBALP;AAMLC,MAAAA,UAAU,EAAE,CACV;AAAEC,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAG,GAAEd,GAAI;AAAjC,OADU,EAEV;AAAEY,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAEvB,WAAW,CAAC,CAAD;AAArC,OAFU,EAGV;AAAEqB,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAE;AAA1B,OAHU,EAIV;AAAEF,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAE;AAA1B,OAJU,EAKV;AAAEF,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAE;AAA1B,OALU,EAMV;AAAEF,QAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,CAAL;AAAuBC,QAAAA,CAAC,EAAE;AAA1B,OANU;AANP,KAAD;AATQ,GAAhB;AA0BE,sBACI;AAAA,2BACA;AAAA,6BACL,QAAC,aAAD;AAAe,QAAA,OAAO,EAAIb;AACzB;;AADD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH;;KAlDQZ,I;AAoDT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom'; \nimport './status.css'\nimport {CanvasJSChart} from 'canvasjs-react-charts'\n\nfunction Fuel(props){\n\n  const monthlyFuel = (j)=>{\n    console.log('the jjjj', j)\n    let sum = 0\n    j = j.parseInt();\n    for(let i=0; i < props.data.length; i++){\n      console.log('pppppp', props.data[i].monthlyFuel[j] )\n      sum += props.data[i].monthlyFuel[j]\n      console.log('The sum is', sum)\n    }\n    return sum/6\n  }\n   let one = monthlyFuel(1)\n  const options = {\n    animationEnabled: true,\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\",\n      // suffix: \" kWh\"\n    },\n    data: [{\n      type: \"splineArea\",\n      xValueFormatString: \"YYYY\",\n      yValueFormatString: \"#,##0.## bn kW⋅h\",\n      showInLegend: true,\n      legendText: \"kWh = one kilowatt hour\",\n      dataPoints: [\n        { x: new Date(2021,1), y: `${one}` },\n        { x: new Date(2021,2), y: monthlyFuel(2) },\n        { x: new Date(2021,3), y: 72.569 },\n        { x: new Date(2021,4), y: 72.743 },\n        { x: new Date(2021,5), y: 72.381 },\n        { x: new Date(2021,6), y: 71.406 },\n        \n      ]\n    }]\n  }\n    return(\n        <>\n        <div>\n\t\t\t<CanvasJSChart options = {options}\n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n        </>\n    )\n}\n\nexport default Fuel;"]},"metadata":{},"sourceType":"module"}