{"ast":null,"code":"var _jsxFileName = \"/home/yasmeen/practice/DoctorGt/src/components/Condition.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './status.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nfunction Condition(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  let good = [];\n  let satisfactory = [];\n  let critical = [];\n\n  for (let i = 0; i < props.data.length; i++) {\n    if (props.data[i].condition === 'Good') {\n      good.push(props.data[i]);\n    } else if (props.data[i].condition === 'Satisfactory') {\n      satisfactory.push(props.data[i]);\n    } else {\n      critical.push(props.data[i]);\n    }\n  }\n\n  let goodPercentage = good.length / props.data.length * 100;\n  let satisfactoryPercentage = satisfactory.length / props.data.length * 100;\n  let criticalPercentage = critical.length / props.data.length * 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Good\",\n          subheader: `${goodPercentage}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: `25%`,\n          value: goodPercentage,\n          thickness: 3,\n          variant: \"static\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [good.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), \"Vehicle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Satisfactory\",\n          subheader: `${satisfactoryPercentage}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: `25%`,\n          value: satisfactoryPercentage,\n          thickness: 3,\n          variant: \"static\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [satisfactory.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 31\n            }, this), \"Vehicle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Critical\",\n          subheader: `${criticalPercentage}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: `25%`,\n          value: criticalPercentage,\n          thickness: 3,\n          variant: \"static\",\n          color: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [critical.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 27\n            }, this), \"Vehicle\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Condition, \"h4ZSQ0ae6nPGs2BiQgjY3xQWnvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Condition;\nexport default Condition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Condition\");","map":{"version":3,"sources":["/home/yasmeen/practice/DoctorGt/src/components/Condition.jsx"],"names":["React","useEffect","useState","ReactDom","CircularProgress","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","Divider","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Condition","props","classes","expanded","setExpanded","handleExpandClick","good","satisfactory","critical","i","data","length","condition","push","goodPercentage","satisfactoryPercentage","criticalPercentage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom'; \n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './status.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  \n}));\n\n  \n\n\n\nfunction Condition (props){\n    const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n    let good = [];\n    let satisfactory = [];\n    let critical = [];\n\n    for(let i =0; i < props.data.length ; i++){\n        if(props.data[i].condition === 'Good'){\n            good.push(props.data[i])\n        }\n        else if(props.data[i].condition === 'Satisfactory'){\n            satisfactory.push(props.data[i])\n        } else {\n            critical.push(props.data[i])\n        }\n    }\n\n    let goodPercentage = good.length/props.data.length * 100;\n    let satisfactoryPercentage = satisfactory.length/props.data.length * 100;\n    let criticalPercentage = critical.length/props.data.length * 100;\n\n    return(\n        <>\n        <div className=\"cardsDiv\">        \n <Card className={classes.root}>\n      <CardHeader\n        title=\"Good\"\n        subheader={`${goodPercentage}%`}\n      />\n          <CircularProgress\n          size={`25%`}\n          value={goodPercentage}\n          thickness={3}\n          variant=\"static\"\n          color=\"secondary\"\n        />\n      <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {good.length} <br/>\n        Vehicle \n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"Satisfactory\"\n        subheader={`${satisfactoryPercentage}%`}\n      />\n         <CircularProgress\n      size={`25%`}\n      value={satisfactoryPercentage}\n      thickness={3}\n      variant=\"static\"\n      color=\"primary\"\n    />\n     <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {satisfactory.length} <br/>\n        Vehicle\n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"Critical\"\n        subheader={`${criticalPercentage}%`}\n      />\n         <CircularProgress\n      size={`25%`}\n      value={criticalPercentage}\n      thickness={3}\n      variant=\"static\"\n      color=\"default\"\n    />\n    <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {critical.length} <br/>\n        Vehicle\n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    </div>\n        </>\n    )\n}\n\nexport default Condition;"]},"metadata":{},"sourceType":"module"}