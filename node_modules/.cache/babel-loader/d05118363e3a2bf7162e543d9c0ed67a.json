{"ast":null,"code":"var _jsxFileName = \"/home/yasmeen/practice/DoctorGt/src/components/Fuel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import ReactDom from 'react-dom'; \n\nimport './status.css';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport Button from '@material-ui/core/Button';\nimport { When } from 'react-if';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Fuel(props) {\n  _s();\n\n  const [showMonthly, setShowMonthly] = useState(false);\n  const [showWeekly, setShowWeekly] = useState(false);\n  console.log('from the fuel', props.data);\n\n  const fuelAvg = j => {\n    let sum = 0;\n\n    for (let i = 0; i < props.data.length; i++) {\n      sum = +props.data[i].monthlyFuel[j];\n    }\n\n    return sum / 6;\n  };\n\n  const fuelWeeklyAvg = j => {\n    let sum = 0;\n\n    for (let i = 0; i < props.data.length; i++) {\n      sum = +props.data[i].weeklyFuel[j];\n    }\n\n    return sum / 4;\n  };\n\n  function handleDisplayWeekly() {\n    if (showWeekly === false) {\n      setShowWeekly(true);\n      setShowMonthly(false);\n    }\n  }\n\n  function handleDisplayMonthly() {\n    if (showMonthly === false) {\n      setShowMonthly(true);\n      setShowWeekly(false);\n    }\n  }\n\n  const options1 = {\n    animationEnabled: true,\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\"\n    },\n    data: [{\n      type: \"splineArea\",\n      showInLegend: true,\n      legendText: \"Last 6 months\",\n      dataPoints: [{\n        x: new Date(2020, 12, 1),\n        y: fuelAvg(0)\n      }, {\n        x: new Date(2021, 1, 1),\n        y: fuelAvg(0)\n      }, {\n        x: new Date(2021, 2, 1),\n        y: fuelAvg(1)\n      }, {\n        x: new Date(2021, 3, 1),\n        y: fuelAvg(2)\n      }, {\n        x: new Date(2021, 4, 1),\n        y: fuelAvg(3)\n      }, {\n        x: new Date(2021, 5, 1),\n        y: fuelAvg(4)\n      }, {\n        x: new Date(2021, 6, 1),\n        y: fuelAvg(5)\n      }, {\n        x: new Date(2021, 7, 1),\n        y: fuelAvg(5)\n      }]\n    }]\n  };\n  const options2 = {\n    animationEnabled: true,\n    width: 900,\n    theme: 'light3',\n    // backgroundColor: '#F5DEB3',\n    colorSet: \"colorSet3\",\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\"\n    },\n    data: [{\n      type: \"splineArea\",\n      showInLegend: true,\n      legendText: \"In Weeks\",\n      dataPoints: [{\n        x: new Date(2021, 8, 7),\n        y: fuelWeeklyAvg(0)\n      }, {\n        x: new Date(2021, 8, 14),\n        y: fuelWeeklyAvg(1)\n      }, {\n        x: new Date(2021, 8, 21),\n        y: fuelWeeklyAvg(2)\n      }, {\n        x: new Date(2021, 8, 30),\n        y: fuelWeeklyAvg(3)\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chartDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => handleDisplayWeekly(),\n          children: \"Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: () => handleDisplayMonthly(),\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(When, {\n        condition: showMonthly,\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          className: \"canvas\",\n          options: options1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(When, {\n        condition: showWeekly,\n        children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          className: \"canvas\",\n          options: options2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Fuel, \"jIKzT34s/XvLZYM5t5TojdIm/xQ=\");\n\n_c = Fuel;\nexport default Fuel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fuel\");","map":{"version":3,"sources":["/home/yasmeen/practice/DoctorGt/src/components/Fuel.jsx"],"names":["React","useEffect","useState","CanvasJSChart","Button","When","Fuel","props","showMonthly","setShowMonthly","showWeekly","setShowWeekly","console","log","data","fuelAvg","j","sum","i","length","monthlyFuel","fuelWeeklyAvg","weeklyFuel","handleDisplayWeekly","handleDisplayMonthly","options1","animationEnabled","title","text","axisY","type","showInLegend","legendText","dataPoints","x","Date","y","options2","width","theme","colorSet"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import ReactDom from 'react-dom'; \nimport './status.css';\nimport {CanvasJSChart} from 'canvasjs-react-charts';\nimport Button from '@material-ui/core/Button';\nimport { When } from 'react-if';\n\nfunction Fuel(props){\n  const [showMonthly, setShowMonthly] = useState(false);\n  const [showWeekly, setShowWeekly] = useState(false);\n\nconsole.log('from the fuel', props.data);\n  const fuelAvg = (j)=>{\n    let sum = 0\n    for(let i=0; i < props.data.length; i++){\n      sum =+ props.data[i].monthlyFuel[j]\n    }\n    return sum/6\n  }\n\n  const fuelWeeklyAvg = (j)=>{\n    let sum = 0\n    for(let i=0; i < props.data.length; i++){\n      sum =+ props.data[i].weeklyFuel[j]\n    }\n    return sum/4\n  }\n  function handleDisplayWeekly(){\n    if(showWeekly === false){\n      setShowWeekly(true)\n      setShowMonthly(false)\n    }\n  }\n\n  function handleDisplayMonthly(){\n    if(showMonthly === false){\n      setShowMonthly(true)\n      setShowWeekly(false)\n    }\n    \n  }\n\n\n  const options1 = {\n    animationEnabled: true,\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\",\n    },\n    data: [{\n      type: \"splineArea\",\n      showInLegend: true,\n      legendText: \"Last 6 months\",\n      dataPoints: [\n        { x: new Date(2020,12,1), y: fuelAvg(0) },\n        { x: new Date(2021,1,1), y: fuelAvg(0) },\n        { x: new Date(2021,2,1), y: fuelAvg(1) },\n        { x: new Date(2021,3,1), y: fuelAvg(2) },\n        { x: new Date(2021,4,1), y: fuelAvg(3) },\n        { x: new Date(2021,5,1), y: fuelAvg(4) },\n        { x: new Date(2021,6,1), y: fuelAvg(5) },\n        { x: new Date(2021,7,1), y: fuelAvg(5) },\n      ]\n    }]\n  }\n\n  const options2 = {\n    animationEnabled: true,\n    width: 900,\n    theme : 'light3',\n    // backgroundColor: '#F5DEB3',\n    colorSet: \"colorSet3\",\n    title: {\n      text: \"Fuel Cost\"\n    },\n    axisY: {\n      title: \"AVG/100km\",\n    },\n    data: [{\n      type: \"splineArea\",\n      showInLegend: true,\n      legendText: \"In Weeks\",\n      dataPoints: [\n        { x: new Date(2021,8,7), y: fuelWeeklyAvg(0) },\n        { x: new Date(2021,8,14), y: fuelWeeklyAvg(1) },\n        { x: new Date(2021,8,21), y: fuelWeeklyAvg(2) },\n        { x: new Date(2021,8,30), y: fuelWeeklyAvg(3) },\n      ]\n    }]\n  }\n    return(\n        <>\n        <div style={{width: '100%'}}>\n        <div className='chartDiv'>\n          <Button color=\"primary\" onClick={()=> handleDisplayWeekly()}>Weekly</Button>\n          <Button color=\"secondary\" onClick={()=> handleDisplayMonthly()}>Monthly</Button>\n</div>\n          <When condition={showMonthly}>\n\t\t\t<CanvasJSChart className='canvas' options = {options1}/>\n          </When>\n          <When condition={showWeekly}>\n      <CanvasJSChart className ='canvas' options = {options2}/>\n      </When>\n\n\t\t</div>\n        </>\n    )\n}\n\nexport default Fuel;"]},"metadata":{},"sourceType":"module"}