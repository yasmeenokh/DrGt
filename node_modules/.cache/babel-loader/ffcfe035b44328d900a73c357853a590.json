{"ast":null,"code":"var _jsxFileName = \"/home/yasmeen/practice/DoctorGt/src/components/Condition.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import ReactDom from 'react-dom'; \n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './status.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 400\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  }\n}));\n\nfunction Condition(props) {\n  _s();\n\n  const classes = useStyles();\n  let good = [];\n  let satisfactory = [];\n  let critical = [];\n\n  for (let i = 0; i < props.data.length; i++) {\n    if (props.data[i].condition === 'Good') {\n      good.push(props.data[i]);\n    } else if (props.data[i].condition === 'Satisfactory') {\n      satisfactory.push(props.data[i]);\n    } else {\n      critical.push(props.data[i]);\n    }\n  }\n\n  let goodPercentage = good.length / props.data.length * 100;\n  let satisfactoryPercentage = satisfactory.length / props.data.length * 100;\n  let criticalPercentage = critical.length / props.data.length * 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outerDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"textPrimary\",\n        component: \"p\",\n        children: \"Vehicles Condition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Good\",\n            subheader: `${goodPercentage.toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: `30%`,\n            value: goodPercentage,\n            thickness: 3,\n            variant: \"static\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [good.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), \"Vehicle\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Satisfactory\",\n            subheader: `${satisfactoryPercentage.toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: `30%`,\n            value: satisfactoryPercentage,\n            thickness: 3,\n            variant: \"static\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [satisfactory.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 31\n              }, this), \"Vehicle\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Critical\",\n            subheader: `${criticalPercentage.toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: `30%`,\n            value: criticalPercentage,\n            thickness: 3,\n            variant: \"static\",\n            color: \"default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: [critical.length, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 27\n              }, this), \"Vehicle\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Condition, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Condition;\nexport default Condition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Condition\");","map":{"version":3,"sources":["/home/yasmeen/practice/DoctorGt/src/components/Condition.jsx"],"names":["React","useEffect","useState","CircularProgress","makeStyles","Card","CardHeader","CardContent","Typography","Divider","useStyles","theme","root","minWidth","media","height","paddingTop","Condition","props","classes","good","satisfactory","critical","i","data","length","condition","push","goodPercentage","satisfactoryPercentage","criticalPercentage","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import ReactDom from 'react-dom'; \n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './status.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 400,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n}));\n\n\nfunction Condition (props){\n    const classes = useStyles();\n    let good = [];\n    let satisfactory = [];\n    let critical = [];\n\n    for(let i =0; i < props.data.length ; i++){\n        if(props.data[i].condition === 'Good'){\n            good.push(props.data[i])\n        }\n        else if(props.data[i].condition === 'Satisfactory'){\n            satisfactory.push(props.data[i])\n        } else {\n            critical.push(props.data[i])\n        }\n    }\n\n    let goodPercentage = good.length/props.data.length * 100;\n    let satisfactoryPercentage = satisfactory.length/props.data.length * 100;\n    let criticalPercentage = critical.length/props.data.length * 100;\n\n    return(\n        <>\n        <div className='outerDiv'>\n        <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\n        Vehicles Condition\n        </Typography>\n        <div className=\"cardsDiv\">        \n <Card className={classes.root}>\n      <CardHeader\n        title=\"Good\"\n        subheader={`${goodPercentage.toFixed(2)}%`}\n      />\n          <CircularProgress\n          size={`30%`}\n          value={goodPercentage}\n          thickness={3}\n          variant=\"static\"\n          color=\"secondary\"\n        />\n      <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {good.length} <br/>\n        Vehicle \n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"Satisfactory\"\n        subheader={`${satisfactoryPercentage.toFixed(2)}%`}\n      />\n         <CircularProgress\n      size={`30%`}\n      value={satisfactoryPercentage}\n      thickness={3}\n      variant=\"static\"\n      color=\"primary\"\n    />\n     <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {satisfactory.length} <br/>\n        Vehicle\n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"Critical\"\n        subheader={`${criticalPercentage.toFixed(2)}%`}\n      />\n         <CircularProgress\n      size={`30%`}\n      value={criticalPercentage}\n      thickness={3}\n      variant=\"static\"\n      color=\"default\"\n    />\n    <Divider variant=\"middle\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {critical.length} <br/>\n        Vehicle\n        </Typography>\n      </CardContent>\n      \n    </Card>\n\n    </div>\n    </div>\n        </>\n    )\n}\n\nexport default Condition;"]},"metadata":{},"sourceType":"module"}