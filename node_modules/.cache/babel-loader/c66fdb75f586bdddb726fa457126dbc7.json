{"ast":null,"code":"var _jsxFileName = \"/home/yasmeen/practice/DoctorGt/src/components/Status.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Status(props) {\n  _s();\n\n  console.log('the props', props.data);\n  const [activeCounter, setActiveCounter] = useState(0);\n\n  for (let i = 0; i < props.data.length; i++) {\n    if (props.data[i] === 'ACtive') {\n      return setActiveCounter(activeCounter++);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Active : \", activeCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Status, \"JVXUXM0VWhRX42eij1uXhIEErA0=\");\n\n_c = Status;\nexport default Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["/home/yasmeen/practice/DoctorGt/src/components/Status.jsx"],"names":["React","useEffect","useState","ReactDom","Status","props","console","log","data","activeCounter","setActiveCounter","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACG,IAA/B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAmCR,QAAQ,CAAC,CAAD,CAAjD;;AAEA,OAAI,IAAIS,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGN,KAAK,CAACG,IAAN,CAAWI,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,QAAGN,KAAK,CAACG,IAAN,CAAWG,CAAX,MAAkB,QAArB,EAA8B;AAC1B,aAAOD,gBAAgB,CAACD,aAAa,EAAd,CAAvB;AACH;AACJ;;AAED,sBACI;AAAA,2BACA;AAAA,8BAAcA,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAQH;;GAlBQL,M;;KAAAA,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDom from 'react-dom'; \n\n\nfunction Status(props){\n    console.log('the props', props.data);\n    const [activeCounter, setActiveCounter]= useState(0);\n\n    for(let i =0; i < props.data.length; i++){\n        if(props.data[i] === 'ACtive'){\n            return setActiveCounter(activeCounter++)\n        }\n    }\n\n    return(\n        <>\n        <h4>Active : {activeCounter}</h4>\n        {/* {props.data.map((element, idx)=>\n        <li key={idx}>{element.status}</li>\n        )} */}\n        </>\n    )\n}\n\nexport default Status;"]},"metadata":{},"sourceType":"module"}